
	<div class="bid-page" style="position: relative; overflow-y: hidden;">
        <div class="split-pane-page">
           <div class="split-pane with-button-bar">
              <div class="pane sixty hide-on-mobile">
                 <div class="buysell-header">
                    <div class="pane-header">
                       <h1 class="proxima-heading">Jordan 4 Retro <br class="hidden-xs">Bred (2019)</h1>
                       <div class="market-summary"><span class="grey">Highest Bid: </span><span class="bold">$235</span><span class="grey"> | Lowest Ask: </span><span class="bold">$269 </span></div>
                       <div class="hidden-xs">
                          <div class="market-summary"><span class="grey">U.S. Men's Size</span>&nbsp;<span class="bold">8</span></div>
                       </div>
                    </div>
                    <div class="header-image image-container"><img src="images/Air-Jordan-11-Retro-Concord-2018-1.jpg" alt="Bred (2019)"></div>
                 </div>
              </div>

              <div style="position: relative; overflow-y: hidden;" class="pane forty pane-grey">
                 <div class="selection-title">Billing</div>
                 <div class="selection-subtitle">Please choose your billing method</div>
                 <form accept-charset="UTF-8" action="/products/sell/<%=product.id %>" class="require-validation needs-validation" data-cc-on-file="false"  method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="âœ“" /><input name="_method" type="hidden" value="PUT" /><input name="authenticity_token" type="hidden" value="qLZ9cScer7ZxqulsUWazw4x3cSEzv899SP/7ThPCOV8=" /></div>
             
                  <input type="hidden" name="payment_method_nonce" id="payment_method_nonce">            
               
                 <div class='form-row'>
                   <div class='col-xs-12 form-group card required card_sec'>
                     <label class='control-label'>Card Number</label>
                     <div class="form-control" id="cc-number"></div>
                     <div class="invalid-feedback">
                      Credit card number is required
                    </div>
                    </div>
                 </div>
                 <div class='form-row'>
                   <div class='col-md-4 form-group cvc required card_sec'>
                     <label class='control-label'>CVC</label>
                     <div class="form-control" id="cc-cvv"></div>
                     <div class="invalid-feedback">
                      Security code required
                    </div>
                      </div>
                   <div class='col-md-4 form-group expiration required'>
                     <label class='control-label'>Expiration</label>
                     <div class="form-control" id="cc-expiration"></div>
                     <div class="invalid-feedback">
                      Expiration date required
                    </div>
                    </div>                 
                 </div>

                 <div class="address-form fs-block">
                    <div class="form-title">billing Info</div>
                    <input data-testid="user-firstName" id="fName" name="firstName" type="text" required="" placeholder="First Name" autocomplete="true" class="field  " value="">
                    <div class="invalid-feedback">
                      First Name is required
                    </div>
                    <input data-testid="user-firstName" id="lName" name="lastName" type="text" required="" placeholder="Last Name" autocomplete="true" class="field  " value="">
                    <div class="invalid-feedback">
                      Last Name is required
                    </div>
                    <div class="field   field-select">
                       <select name="countryCodeAlpha2" required="" placeholder="Country">
                          <option value="" disabled="">Country</option>
                          <option value="">Select Country or Region</option>
                          <option value="US">United States</option>
                          <option value="AU">Australia</option>
                          <option value="CA">Canada</option>
                          <option value="FR">France</option>
                          <option value="DE">Germany</option>
                          <option value="HK">Hong Kong SAR</option>
                          <option value="IT">Italy</option>
                          <option value="JP">Japan</option>
                          <option value="SG">Singapore</option>
                          <option value="AE">United Arab Emirates</option>
                          <option value="GB">United Kingdom</option>
                          <option disabled="">------</option>
                          <option value="AL">Albania</option>                 
                       </select>                      
                    </div>
                    <div>
                       <div class="GPlacesACField__Container-sc-1xqqpdz-0 iUshPx"><input data-testid="user-streetAddress" name="streetAddress" type="text" required="" placeholder="Address" autocomplete="true" class="field  " value=""></div>
                    </div>
                    <input data-testid="user-extendedAddress" name="extendedAddress" type="text" placeholder="Address 2" autocomplete="true" class="field  " value=""><input data-testid="user-locality" name="locality" type="text" required="" placeholder="City" autocomplete="true" class="field  " value="">
                    <div class="inner-flex between"><input data-testid="user-region" name="region" type="text" placeholder="State/Province/Region" autocomplete="true" class="field field-full " value=""><input data-testid="user-postalCode" name="postalCode" type="text" required="" placeholder="Zip/Postal Code" autocomplete="true" class="field field-full " value=""></div>
                    <input data-testid="user-telephone" name="telephone" type="tel" required="" placeholder="Phone Number" autocomplete="true" class="field  " value="">
                    <div class="text-center">
                      <button id="hosted-submit-button" class="btn btn-primary btn-lg" type="submit">Pay with <span id="card-brand">Card</span></button>
                      </div>
                  </div>
                 </form>
                 
     
     
       
                  
              </div>
           </div>
        </div>
     </div>
     
     <!-- Load the required client component. -->
   <script src="https://js.braintreegateway.com/web/3.55.0/js/client.min.js"></script>
 
   <!-- Load Hosted Fields component. -->
   <script src="https://js.braintreegateway.com/web/3.55.0/js/hosted-fields.min.js"></script>
<script>
var form = $('form');

braintree.client.create({
  authorization: 'sandbox_tvb37t33_dwt5m34ppngz6s7k'
},
 function(err, clientInstance) {
  if (err) {
    console.error(err);
    return;
  }

  braintree.hostedFields.create({
    client: clientInstance,
    styles: {
      input: {
        // change input styles to match
        // bootstrap styles
        'font-size': '1rem',
        color: '#495057'
      }
    },
    fields: {
      number: {
        selector: '#cc-number',
        placeholder: '4111 1111 1111 1111'
      },
      cvv: {
        selector: '#cc-cvv',
        placeholder: '123'
      },
      expirationDate: {
        selector: '#cc-expiration',
        placeholder: 'MM / YY'
      }
    }
  }, function(err, hostedFieldsInstance) {
    if (err) {
      console.error(err);
      return;
    }
    function createInputChangeEventListener(element) {
      return function () {
        validateInput(element);
      }
    }

    function setValidityClasses(element, validity) {
      if (validity) {
        element.removeClass('is-invalid');
        element.addClass('is-valid');  
      } else {
        element.addClass('is-invalid');
        element.removeClass('is-valid');  
      }    
    }
    
    function validateInput(element) {
      // very basic validation, if the
      // fields are empty, mark them
      // as invalid, if not, mark them
      // as valid

      if (!element.val().trim()) {
        setValidityClasses(element, false);

        return false;
      }

      setValidityClasses(element, true);

      return true;
    }
    
    // function validateEmail () {
    //   var baseValidity = validateInput(email);
      
    //   if (!baseValidity) {  
    //     return false;
    //   }

    //   if (email.val().indexOf('@') === -1) {
    //     setValidityClasses(email, false);
    //     return false;
    //   }
      
    //   setValidityClasses(email, true);
    //   return true;
    // }

    var fName = $('#fName');
    var lName = $('#lName');
    //var email = $('#email');

    // fName.on('change', function () {
    //   validateInput(fName);
    // });
    // lName.on('change', function () {
    //   validateInput(lName);
    // });
    //email.on('change', validateEmail);


            hostedFieldsInstance.on('validityChange', function(event) {
      var field = event.fields[event.emittedBy];

      // Remove any previously applied error or warning classes
      $(field.container).removeClass('is-valid');
      $(field.container).removeClass('is-invalid');

      if (field.isValid) {
        $(field.container).addClass('is-valid');
      } else if (field.isPotentiallyValid) {
        // skip adding classes if the field is
        // not valid, but is potentially valid
      } else {
        $(field.container).addClass('is-invalid');
      }
    });

    hostedFieldsInstance.on('cardTypeChange', function(event) {
      var cardBrand = $('#card-brand');
      var cvvLabel = $('[for="cc-cvv"]');

      if (event.cards.length === 1) {
        var card = event.cards[0];

        // change pay button to specify the type of card
        // being used
        cardBrand.text(card.niceType);
        // update the security code label
        cvvLabel.text(card.code.name);
      } else {
        // reset to defaults
        cardBrand.text('Card');
        cvvLabel.text('CVV');
      }
    });
    
    form.submit(function(event) {
      event.preventDefault();
      $('#hosted-submit-button').attr("disabled", true).html('Payment Proccessing...');
      var formIsInvalid = false;
      var state = hostedFieldsInstance.getState();

      // perform validations on the non-Hosted Fields
      // inputs
      // if (!validateEmail() || !validateInput($('#cc-name'))) {
      //   formIsInvalid = true;
      // }

      // Loop through the Hosted Fields and check
      // for validity, apply the is-invalid class
      // to the field container if invalid
      Object.keys(state.fields).forEach(function(field) {
        if (!state.fields[field].isValid) {
          $(state.fields[field].container).addClass('is-invalid');
          formIsInvalid = true;
        }
      });

      if (formIsInvalid) {
        return;
      }

      hostedFieldsInstance.tokenize({
        //cardholderName: $('#cc-name').val()
      }, function(err, payload) {
        if (err) {
          console.error(err);
          return;
        }
        console.log(payload);
        // var button = document.querySelector('#hosted-submit-button');
        // button.addEventListener('click', function () {
        $.ajax({
              type: 'POST',
              url:"/products/sell/<%=product.id %>",
              data: {'paymentMethodNonce': payload.nonce}
            }).done(function(result) {
              form.trigger("reset");
              // Tear down the Drop-in UI
              hostedFieldsInstance.teardown(function (teardownErr) {
                if (teardownErr) {
                 // console.error('Could not tear down Drop-in UI!');
                } else {
                 // console.info('Drop-in UI has been torn down!');
                  // Remove the 'Submit payment' button
                 // $('#hosted-submit-button').remove();
                }
              });
    
              if (result.success) {

                $('#hosted-submit-button').attr("disabled", false).html('Payment Successfull');
                $(location).attr('href', '/user/selling');
                //$('.toast').html('<h1>Success</h1><p>Your Drop-in UI is working! Check your <a href="https://sandbox.braintreegateway.com/login">sandbox Control Panel</a> for your test transactions.</p><p>Refresh to try another transaction.</p>');
               // $('.toast').toast('show');
              } else {
               
                $('.toast').html('<h1>Error</h1><p>Check your console.</p>');
                $('.toast').toast('show');
              }
            });
          
         // });
       });
    });
  });
});
</script>