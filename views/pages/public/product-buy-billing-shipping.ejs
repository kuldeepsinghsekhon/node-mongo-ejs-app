
	<div class="selection-title">Billing/Shipping</div>
	<div class="selection-subtitle">Please choose your billing and shipping method</div>
	<!-- <div class="selected-payment"><div class="payment-bubble credit"><img src="#"></div>
	<div class="payment-title">Use Credit Card for Billing</div><div class="selection-close">x</div></div> -->
	<form action="/shop/checkout" method="post" id="checkout-form">
			<div class='form-row'>				  
	  <div class='col-xs-12 form-group required card_sec'>
		<label class='control-label'>Name on Card</label>
    <input class='form-control' name="name" id="card-name" size='4' type='text' required>
    <input class='form-control' name="paymentMethodNonce" id="paymentMethodNonce" size='4' type='hidden' value="">    
	  </div>
	</div>
	<div class='form-row'>
	  <div class='col-xs-12 form-group card required card_sec'>
		<label class='control-label'>Card Number</label>
		<div class="form-control" id="cc-number"></div>
		<div class="invalid-feedback">
		 Credit card number is required
	   </div>	  </div>
	</div>
	<div class='form-row'>
	  <div class='col-md-4 form-group cvc required card_sec'>
		<label class='control-label'>CVC</label>
        <div class="form-control" id="cc-cvv"></div>
                     <div class="invalid-feedback">
                      Security code required
                    </div>	  </div>
	  <div class='col-md-4 form-group expiration required'>
		<label class='control-label'>Expiration</label>
		<div class="form-control" id="cc-expiration"></div>
		<div class="invalid-feedback">
		 Expiration date required
	   </div>	  </div>

	</div>
	<div class="address-form fs-block">
    <!----Biling info -->
	   <div class="form-title">Billing Info</div>
     <input data-testid="user-firstName" id="first_name_billing" name="firstName" type="text" required="" placeholder="First Name" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.name%><%}%>">
     <input data-testid="user-lastName"  id="last_name_billing" name="lastName" type="text" required="" placeholder="Last Name" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.lastname%><%}%>">
	   <div class="field field-select">
      <% include ../../partials/messages %>
      <select name="country" required="" placeholder="Country">
                          
        <option value="">Select Country</option>
         <% countries.forEach((country) =>{%>
              <option value="<%= country.Code %>"><%= country.Name %></option>
           <%})%>
        </select>
	   </div>
	   <div>
		  <div class="">
        <input data-testid="user-streetAddress" id="address_billing"name="address" type="text" required="" placeholder="Address" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.address1 %><%}%>"></div>
	   </div>
     <input data-testid="user-extendedAddress" id="address2_billing" name="address2" type="text" placeholder="Address 2" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.address2%><%}%>">
     <input id="city_billing" name="locality" type="text" required="" placeholder="City" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.city%><%}%>">
	   <div class="inner-flex between">
       <input id="state_billing" name="region" type="text" placeholder="State/Province/Region" autocomplete="true" class="field field-full " value="<%if(billingAddress){%><%=billingAddress.state%><%}%>">
       <input id="postalCode_billing" name="postalCode" type="text" required="" placeholder="Zip/Postal Code" autocomplete="true" class="field field-full " value="<%if(billingAddress){%><%=billingAddress.postalCode%><%}%>"></div>
	   <input id="telephone_billing" name="telephone" type="tel" required="" placeholder="Phone Number" autocomplete="true" class="field" value="<%if(billingAddress){%><%=billingAddress.phone%><%}%>">
  </div>
  <div class="billingCheckbox">
    <label for="differentShipping">Ship to my Billing</label>
    <input class="fs1" type="checkbox" id="differentShipping">
  </div>
	<div class="address-form fs-block shipping-form">
	   <div class="form-title">Shipping Info</div>
     <input id="first_name_shipping" name="firstName" type="text" required="" placeholder="First Name" autocomplete="true" class="field  " value="<%if(shippingAddress){%><%=shippingAddress.name %><%}%>">
     <input id="last_name_shipping" name="lastName" type="text" required="" placeholder="Last Name" autocomplete="true" class="field  " value="<%if(shippingAddress){%><%=shippingAddress.lastname %><%}%>">
	   <div class="field   field-select">
		  <select name="country" required="" placeholder="Country">
                          
        <option value="">Select Country</option>
         <% countries.forEach((country) => {  %>
              <option value="<%= country.Code %>"><%= country.Name %></option>
           <%  })%> 
        </select>
	   </div>
	   <div>
		  <div class=""><input id="address_shipping" data-testid="user-streetAddress" name="streetAddress" type="text" required="" placeholder="Address" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=shippingAddress.address1 %><%}%>"></div>
	   </div>
     <input id="address2_shipping" data-testid="user-extendedAddress" name="extendedAddress" type="text" placeholder="Address 2" autocomplete="true" class="field  " value="<%if(shippingAddress){%><%=shippingAddress.address2 %><%}%>">
     <input id="city_shipping" name="locality" type="text" required="" placeholder="City" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=shippingAddress.city %><%}%>">
     <div class="inner-flex between">
       <input id="state_shipping" name="region" type="text" placeholder="State/Province/Region" autocomplete="true" class="field field-full " value="<%if(billingAddress){%><%=billingAddress.state %><%}%>">
      <input id="postalCode_shipping" name="postalCode" type="text" required="" placeholder="Zip/Postal Code" autocomplete="true" class="field field-full " value="<%if(billingAddress){%><%=billingAddress.postalCode %><%}%>"></div>
	   <input id="telephone_shipping" name="telephone" type="tel" required="" placeholder="Phone Number" autocomplete="true" class="field  " value="<%if(billingAddress){%><%=billingAddress.phone %><%}%>">
	</div>
<div class="nxt_btn">
    <button type="button " class="btn flT_lft">Cancel</button>
	   <button type="submit" class="btn btn-primary make-payment-bt" >Make Payment</button>
	   </div>
</form>
<script>
var form = $('form');

braintree.client.create({
  authorization: 'sandbox_tvb37t33_dwt5m34ppngz6s7k'
},
 function(err, clientInstance) {
  if (err) {
    console.error(err);
    return;
  }

  braintree.hostedFields.create({
    
    client: clientInstance,
    styles: {
      input: {
        // change input styles to match
        // bootstrap styles
        'font-size': '1rem',
        color: '#495057'
      }
    },
    fields: {
      number: {
        selector: '#cc-number',
        placeholder: '4111 1111 1111 1111'
      },
      cvv: {
        selector: '#cc-cvv',
        placeholder: '123'
      },
      expirationDate: {
        selector: '#cc-expiration',
        placeholder: 'MM / YY'
      }
    }
  }, function(err, hostedFieldsInstance) {
    if (err) {
      console.error(err);
      return;
    }
    function createInputChangeEventListener(element) {
      return function () {
        validateInput(element);
      }
    }

    function setValidityClasses(element, validity) {
      if (validity) {
        element.removeClass('is-invalid');
        element.addClass('is-valid');  
      } else {
        element.addClass('is-invalid');
        element.removeClass('is-valid');  
      }    
    }
    
    function validateInput(element) {
      // very basic validation, if the
      // fields are empty, mark them
      // as invalid, if not, mark them
      // as valid

      if (!element.val().trim()) {
        setValidityClasses(element, false);

        return false;
      }

      setValidityClasses(element, true);

      return true;
    }
    
    // function validateEmail () {
    //   var baseValidity = validateInput(email);
      
    //   if (!baseValidity) {  
    //     return false;
    //   }

    //   if (email.val().indexOf('@') === -1) {
    //     setValidityClasses(email, false);
    //     return false;
    //   }
      
    //   setValidityClasses(email, true);
    //   return true;
    // }

    var fName = $('#fName');
    var lName = $('#lName');
    //var email = $('#email');

    // fName.on('change', function () {
    //   validateInput(fName);
    // });
    // lName.on('change', function () {
    //   validateInput(lName);
    // });
    //email.on('change', validateEmail);


            hostedFieldsInstance.on('validityChange', function(event) {
      var field = event.fields[event.emittedBy];

      // Remove any previously applied error or warning classes
      $(field.container).removeClass('is-valid');
      $(field.container).removeClass('is-invalid');

      if (field.isValid) {
        $(field.container).addClass('is-valid');
      } else if (field.isPotentiallyValid) {
        // skip adding classes if the field is
        // not valid, but is potentially valid
      } else {
        $(field.container).addClass('is-invalid');
      }
    });

    hostedFieldsInstance.on('cardTypeChange', function(event) {
      var cardBrand = $('#card-brand');
      var cvvLabel = $('[for="cc-cvv"]');

      if (event.cards.length === 1) {
        var card = event.cards[0];

        // change pay button to specify the type of card
        // being used
        cardBrand.text(card.niceType);
        // update the security code label
        cvvLabel.text(card.code.name);
      } else {
        // reset to defaults
        cardBrand.text('Card');
        cvvLabel.text('CVV');
      }
    });

    form.submit(function(event) {
      event.preventDefault();
      var formIsInvalid = false;
      var state = hostedFieldsInstance.getState();

      // perform validations on the non-Hosted Fields
      // inputs
      // if (!validateEmail() || !validateInput($('#cc-name'))) {
      //   formIsInvalid = true;
      // }

      // Loop through the Hosted Fields and check
      // for validity, apply the is-invalid class
      // to the field container if invalid
      Object.keys(state.fields).forEach(function(field) {
        if (!state.fields[field].isValid) {
          $(state.fields[field].container).addClass('is-invalid');
          formIsInvalid = true;
        }
      });
      if (formIsInvalid) {
        return;
      }

      hostedFieldsInstance.tokenize({
        //cardholderName: $('#cc-name').val()
      }, function(err, payload) {
        if (err) {
          console.error(err);
          return;
        }
        console.log(payload);
        // var button = document.querySelector('#hosted-submit-button');
        // button.addEventListener('click', function () {
          var askprice=$("#bid-price-input").val();
          var bidType="buybid";
          var expiry=$('.dropdown-toggle').text();
          var first_name_shipping=$("#first_name_shipping").val();
          var last_name_shipping=$("#last_name_shipping").val();
          var address_shipping=$("#address_shipping").val();
          var address2_shipping=$("#address2_shipping").val();
          var telephone_shipping=$("#telephone_shipping").val();
          var country_code_shipping=$("#country_code_shipping").val();
          var city_shipping=$("#city_shipping").val();
          var state_shipping=$("#state_shipping").val();
          var postalCode_shipping=$("#postalCode_shipping").val();

          var first_name_billing=$('#first_name_billing').val()
          var last_name_billing=$('#last_name_billing').val();
          var address_billing=$('#address_billing').val();
          var address2_billing=$("#address2_billing").val();
          var telephone_billing=$("#telephone_billing").val();
          var country_code_billing=$("#country_code_billing").val();
          var postalCode_billing=$("#postalCode_billing").val();
          var state_billing=$("#state_billing").val();
          var city_billing=$("#city_billing").val();
          var attr_val=$('#attr-selector-attr').text();
      var bidType=$("#bid-type").val();
      console.log(bidType)
          var productid="<%=product.id %>";
         // $("#paymentMethodNonce").val(payload.nonce);
         $('.make-payment-bt').attr("disabled", true).html('Payment Proccessing...');
        $.ajax({
              type: 'POST',
              url:"/products/buy/<%=product.id %>",
              data: {'paymentMethodNonce': payload.nonce,
              bidprice:askprice,productid:productid,bidType:bidType,
               expiry:expiry,
               first_name_shipping:first_name_shipping,
               last_name_shipping:last_name_shipping,
               address_shipping:address_shipping,
               address2_shipping:address2_shipping,
               city_shipping:city_shipping,
               state_shipping:state_shipping,
               country_code_shipping:country_code_shipping,
               postalCode_shipping:postalCode_shipping,
               telephone_shipping:telephone_shipping,

               first_name_billing:first_name_billing,
               last_name_billing:last_name_billing,
               address_billing:address_billing,
               address2_billing:address2_billing,
               city_billing:city_billing,
               state_billing:state_billing,
               country_code_billing:country_code_billing,
               postalCode_billing:postalCode_billing,
               telephone_billing:telephone_billing,
               attr_val:attr_val
              }
            }).done(function(result) {
              form.trigger("reset");
              // Tear down the Drop-in UI
              hostedFieldsInstance.teardown(function (teardownErr) {
                if (teardownErr) {
                  console.error('Could not tear down Drop-in UI!');
                } else {
                  console.info('Drop-in UI has been torn down!');
                  // Remove the 'Submit payment' button
                 // $('#hosted-submit-button').remove();
                }
              });
    
              if (result.success) {
                $('.make-payment-bt').attr("disabled", false).html('Payment Successfull');
                $(location).attr('href', '/user/buying');
                $('.toast').html('<h1>Success</h1><p>Your Bid has been placed successfully.</p>');
                $('.toast').toast('show');
              } else {
               
                $('.toast').html('<h1>Error</h1><p>Check your console.</p>');
                $('.toast').toast('show');
              }
            });
           // form.submit();
         // });
       });
    });
  });
});
</script>
<script>

  $("#differentShipping").on('change',function(){
    $('.shipping-form').toggle();
		//nodemon i 	getbidCharges();
    if ($(this).is(':checked')) {
      $('#first_name_shipping').val($('#first_name_billing').val());
      $('#last_name_shipping').val($('#last_name_billing').val());
      $('#address_shipping').val($('#address_billing').val());
      $('#address2_shipping').val($('#address2_billing').val());
      $('#telephone_shipping').val($('#telephone_billing').val());
      $('#country_code_shipping').val($('#country_code_billing').val());
      $('#city_shipping').val($('#city_billing').val());
      $('#state_shipping').val($('#state_billing').val());
      $('#postalCode_shipping').val($('#postalCode_billing').val());
      
    }
    
  			});
</script>
	 
